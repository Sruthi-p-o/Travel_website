{"ast":null,"code":"var _jsxFileName = \"C:\\\\FrontEnd-Travel-React-Capstone-Project\\\\tourism-website-travele\\\\src\\\\Pages\\\\Login\\\\PrivateRoute\\\\PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Redirect, Route } from \"react-router\";\nimport useAuth from \"../../../Hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  children,\n  adminOnly,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    user,\n    isLoading\n  } = useAuth();\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  } // If adminOnly is true and user is not admin, redirect to login\n\n\n  if (adminOnly && (!user || !user.isAdmin)) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: rest.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  } // If adminOnly is false or user is admin, render children\n\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    children: user && user.email ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 40\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrivateRoute, \"6lKHjqCqGIRsHh92bje8H78laow=\", false, function () {\n  return [useAuth];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/FrontEnd-Travel-React-Capstone-Project/tourism-website-travele/src/Pages/Login/PrivateRoute/PrivateRoute.js"],"names":["React","Spinner","Redirect","Route","useAuth","PrivateRoute","children","adminOnly","rest","user","isLoading","isAdmin","pathname","state","from","location","email"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAsC;AAAA;;AACzD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBN,OAAO,EAAnC;;AAEA,MAAIM,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GALwD,CAOzD;;;AACA,MAAIH,SAAS,KAAK,CAACE,IAAD,IAAS,CAACA,IAAI,CAACE,OAApB,CAAb,EAA2C;AACzC,wBACE,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFC,QAAAA,QAAQ,EAAE,QADR;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEN,IAAI,CAACO;AAAb;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GAjBwD,CAmBzD;;;AACA,sBACE,QAAC,KAAD,OAAWP,IAAX;AAAA,cACGC,IAAI,IAAIA,IAAI,CAACO,KAAb,GAAqBV,QAArB,gBAAgC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADnC;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzBD;;GAAMD,Y;UACwBD,O;;;KADxBC,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport useAuth from \"../../../Hooks/useAuth\";\r\n\r\nconst PrivateRoute = ({ children, adminOnly, ...rest }) => {\r\n  const { user, isLoading } = useAuth();\r\n\r\n  if (isLoading) {\r\n    return <Spinner animation=\"border\" variant=\"danger\" />;\r\n  }\r\n\r\n  // If adminOnly is true and user is not admin, redirect to login\r\n  if (adminOnly && (!user || !user.isAdmin)) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/login\",\r\n          state: { from: rest.location }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  // If adminOnly is false or user is admin, render children\r\n  return (\r\n    <Route {...rest}>\r\n      {user && user.email ? children : <Redirect to=\"/login\" />}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}